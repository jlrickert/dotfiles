#!/usr/bin/env bash

set -o errexit  # exit if non-zero status code is returned
set -o nounset  # exit if undefined variable is used
set -o pipefail # exit if no-zero status code is returned in a pipeline

declare NOCOLOR=
[[ -t 1 ]] || NOCOLOR=y
declare RED='[38;2;255;0;0m'
declare RESET='[0m'

if [[ -n "$NOCOLOR" ]]; then
	RED=
	RESET=
fi

SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"
PROJECT_DIR="$(cd "${SCRIPT_DIR}" && git rev-parse --show-toplevel)"
CONFIG_DIR="${PROJECT_DIR}/nvim/src"
CONFIG_DIR="${PROJECT_DIR}/nvim/old-src"
DATA_DIR="${HOME}/.local/share/dvim"
STATE_DIR="${HOME}/.local/state/dvim"

# Define the Docker image to use.
IMAGE_NAME="dvim:latest" # Or a more specific Ubuntu version

# Check if Docker is installed.
if ! command -v docker &>/dev/null; then
	echo "${RED}Error: Docker is not installed. Please install Docker.${RESET}"
	exit 1
fi

# Check if the image exists, and set it up if it doesn't.
if ! docker image inspect "${IMAGE_NAME}" &>/dev/null; then
	../setup.sh
fi

docker run -it \
	--volume "${DATA_DIR}:/root/.local/share/nvim" \
	--volume "${STATE_DIR}:/root/.local/state/nvim" \
	--volume "${CONFIG_DIR}:/root/.config/nvim" \
	--volume "${PWD}:/mnt/volume" \
	--workdir "/mnt/volume" \
	"${IMAGE_NAME}" \
	"$@"
