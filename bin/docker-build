#!/usr/bin/env bash

# Script to build the Neovim Docker image.

set -o errexit  # exit if non-zero status code is returned
set -o nounset  # exit if undefined variable is used
set -o pipefail # exit if no-zero status code is returned in a pipeline

# Load environmental variables and utility functions
SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"
PROJECT_ROOT="$(cd "${SCRIPT_DIR}" && git rev-parse --show-toplevel)"

# Source env.sh first to get color variables, used by log_message if NOCOLOR is not set
. "${PROJECT_ROOT}/lib/env.sh"

# Source func.sh to get the log_message function
. "${PROJECT_ROOT}/lib/func.sh"

ensure_environment

cd "${PROJECT_ROOT}"

# Define the Docker image name.
IMAGE_NAME="dotfiles"

cd "${PROJECT_ROOT}"
# Define the Dockerfile path.
DOCKERFILE_PATH="./Dockerfile"

# Check if Docker is installed.
if ! command -v docker &>/dev/null; then
	log_message ERROR "Docker is not installed. Please install Docker."
	exit 1
fi

# Build the Docker image.
log_message INFO "Attempting to build Docker image: ${IMAGE_NAME} using Dockerfile ${DOCKERFILE_PATH}"

if docker build -t "${IMAGE_NAME}" -f "${DOCKERFILE_PATH}" "."; then
	log_message SUCCESS "Docker image built successfully: ${IMAGE_NAME}"
else
	log_message ERROR "Docker image build failed for ${IMAGE_NAME}"
	exit 1
fi
