################################################################################
# Utils
################################################################################

_source_if() { [[ -r "$1" ]] && source "$1"; }
_have() { type "$1" &>/dev/null; }

################################################################################
# Variables
################################################################################

export XDG_CACHE_HOME="${HOME}/.cache"
export XDG_CONFIG_HOME="${HOME}/.config"
export XDG_DATA_HOME="${HOME}/.local/share"
export XDG_STATE_HOME="${HOME}/.local/state"
export XDG_DESKTOP_DIR="${HOME}/Desktop"
export XDG_DOCUMENTS_DIR="${HOME}/Documents"
export XDG_DOWNLOAD_DIR="${HOME}/Downloads"
export XDG_MUSIC_DIR="${HOME}/Music"
export XDG_PICTURES_DIR="${HOME}/Pictures"
export XDG_PUBLICSHARE_DIR="${HOME}/Public"
export XDG_TEMPLATES_DIR="${HOME}/Templates"
export XDG_VIDEOS_DIR="${HOME}/Videos"

export USER="${USER:-$(whoami)}"
export GITUSER="${USER}"
export REPOS="${HOME}/repos"
export GHREPOS="${REPOS}/github.com/${GITUSER}"
export DOTFILES_DATA="${XDG_DATA_HOME}/dotfiles"
export DOTFILES_STATE="${XDG_STATE_HOME}/dotfiles"
export DOTFILES_CONFIG="${XDG_CONFIG_HOME}/dotfiles"
export DOTFILES_CACHE="${XDG_CACHE_HOME}/dotfiles"
export SCRIPTS="${HOME}/scripts"
export SNIPPETS="${HOME}/snippets"
export HELP_BROWSER=lynx
export DOTNET_ROOT="${HOME}/.local/share/dotnet"
export PYENV_ROOT="$HOME/.local/share/pyenv"

export LANG=en_US.UTF-8

export DESKTOP="${XDG_DESKTOP_DIR}"
export DOCUMENTS="${XDG_DOCUMENTS_DIR}"
export DOWNLOAD="${XDG_DOWNLOAD_DIR}"
export MUSIC_DIR="${XDG_MUSIC_DIR}"
export PICTURES="${XDG_PICTURES_DIR}"
export PUBLIC="${XDG_PUBLICSHARE_DIR}"
export TEMPLATES="${XDG_TEMPLATES_DIR}"
export VIDEOS="${XDG_VIDEOS_DIR}"

export BAT_THEME=gruvbox-dark
export DENO_INSTALL="${XDG_DATA_HOME}/deno"
export DENO_INSTALL_ROOT="${XDG_DATA_HOME}/deno/bin"
export NVM_DIR="${XDG_DATA_HOME}/nvm"
export RUSTUP_HOME="${XDG_DATA_HOME}/rustup"
export CARGO_HOME="${XDG_DATA_HOME}/cargo"
export VOLTA_HOME="${HOME}/.volta"
export FNM_HOME="${HOME}/.local/share/fnm"
export ZSH_HOME="${HOME}/.local/share/zsh"
export PPM_HOME="${HOME}/.local/share/ppm"
export GOPRIVATE="github.com/${GITUSER}/*,gitlab.com/${GITUSER}/*"
export GOPATH="${XDG_DATA_HOME}/go"
export GOBIN="${HOME}/.local/bin"
export GOPROXY=direct
export KUBECONFIG="${HOME}/.kube/config"
export CGO_ENABLED=0
export PYTHONDONTWRITEBYTECODE=2
export LC_COLLATE=C
#export CFLAGS="-Wall -Wextra -Werror -O0 -g -fsanitize=address -fno-omit-frame-pointer -finstrument-functions"
export ZSH="${XDG_DATA_HOME}/oh-my-zsh"
export ZSH_CUSTOM="${XDG_CONFIG_HOME}/oh-my-custom"
export FLYCTL_INSTALL=${XDG_DATA_HOME}/.local/share/fly
export PNPM_HOME="${XDG_DATA_HOME}/pnpm"
export CDPATH="${CDPATH}:${HOME}/repos/github.com/jlrickert/"

################################################################################
# Fuzzy finder
################################################################################
export FZF_DEFAULT_COMMAND='rg --files --hidden --color=never'
# export FZF_DEFAULT_OPTS="--ansi --phony --preview='bat --color=always {}'"
# export FZF_ALT_C_COMMAND='fd --color=never --type d'
export FZF_ALT_C_COMMAND='fdfind --color=never --type d'
export FZF_ALT_C_OPTS="--preview 'tree -C {}"

# Options to fzf command
# export FZF_COMPLETION_OPTS='--border --info=inline'

################################################################################
# Path
################################################################################
# append to path if it exists
_pathappend() {
	for arg in "$@"; do
		test -d "$arg" || continue
		PATH=${PATH//":$arg:"/:} # remove all occuences of `:$arg:` from the PATH
		PATH=${PATH/#"$arg:"/}   # remove `"$arg:"` from the the beginning of the string
		PATH=${PATH/%":$arg"/}   # remove `":$arg` from the end of the string
		export PATH="${PATH:+"$PATH:"}$arg"
	done
}

# prepend to path if it exists
_pathprepend() {
	for arg in "$@"; do
		test -d "$arg" || continue
		PATH=${PATH//:"$arg:"/:}
		PATH=${PATH/#"$arg:"/}
		PATH=${PATH/%":$arg"/}
		export PATH="$arg${PATH:+":${PATH}"}"
	done
}

# remember last arg will be first in path. Precedence comes to the item that comes at the head of the list. Appended paths are pruned if they do not exist.
_pathprepend \
	/usr/local/go/bin \
	/usr/local/bin \
	"${SCRIPTS}" \
	"${HOME}/.local/bin" \
	"${XDG_DATA_HOME}/flutter/bin" \
	"${CARGO_HOME}/bin" \
	"${DENO_INSTALL_ROOT}" \
	"${FNM_HOME}" \
	"${HOME}/.config/emacs/bin" \
	"${PNPM_HOME}" \
	"${XDG_DATA_HOME}/go/bin" \
	"${DOTNET_ROOT}"

_pathappend \
	/usr/local/bin \
	/usr/local/sbin \
	/usr/local/games \
	/usr/games \
	/usr/sbin \
	/usr/bin \
	/snap/bin \
	/sbin \
	/bin

if _have /opt/homebrew/bin/brew; then
	source <(/opt/homebrew/bin/brew shellenv)

	python_bin="$(find /Users/jlrickert/Library/Python -name "bin")"
	[[ -d "${python_bin}" ]] && _pathappend "${python_bin}"

	_pathappend /opt/homebrew/opt/mysql-client/bin
fi

_pathappend /Applications/kitty.app/Contents/MacOS

_have vi && export EDITOR=vi
_have vim && export EDITOR=vim
_have nvim && export EDITOR=nvim
_have vi && export VISUAL=vi
_have vim && export VISUAL=vim
_have nvim && export VISUAL=nvim
_have vi && export EDITOR_PREFIX=vi
_have vim && export EDITOR_PREFIX=vim
_have nvim && export EDITOR_PREFIX=nvim
export GIT_EDITOR="${EDITOR}"

if [[ -d "${DOTFILES_DATA}/secrets" ]]; then
	for file in "${DOTFILES_DATA}"/secrets/*; do
		# shellcheck source=${DOTFILES_CONFIG}/*.sh
		. "${file}"
	done
fi
